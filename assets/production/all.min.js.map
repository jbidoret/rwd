{"version":3,"sources":["main.js"],"names":["wip","document","querySelector","setRandomPosition","e","left","Math","round","random","window","innerWidth","getBoundingClientRect","width","tp","innerHeight","height","style","top","body","onclick","w","event","target","classList","contains","cloneNode","remove","appendChild","add","headings","querySelectorAll","Array","prototype","forEach","call","heading","btn","nextElementSibling","location","hash","setAttribute","hidden","expanded","getAttribute","article","link","preventDefault","figure","createElement","className","dataset","type","image","classname","onload","parent","parentNode","insertBefore","src","alt","caption","source","figcaption","matches","innerHTML","close","textContent","removeChild"],"mappings":"AAIA,MAAAA,IAAAC,SAAAC,cAAA,UAIA,SAAAC,kBAAAC,GACA,IAAAC,EAAAC,KAAAC,MAAAD,KAAAE,UAAAC,OAAAC,WAAAN,EAAAO,wBAAAC,QACAC,EAAAP,KAAAC,MAAAD,KAAAE,UAAAC,OAAAK,YAAAV,EAAAO,wBAAAI,SACAX,EAAAY,MAAAX,KAAAA,EAAA,KACAD,EAAAY,MAAAC,IAAAJ,EAAA,KAPAb,KAAAG,kBAAAH,KAWAC,SAAAiB,KAAAC,QAAA,IACA,IACAC,EADAC,EAAAC,OAAAC,UAAAC,SAAA,YACAJ,EAAAC,EAAAC,OAAAG,WAAA,IACAF,UAAAG,OAAA,QACAzB,SAAAiB,KAAAS,YAAAP,GACAjB,kBAAAiB,GACAC,EAAAC,OAAAC,UAAAK,IAAA,UAMA,MAAAC,SAAA5B,SAAA6B,iBAAA,aAEAC,MAAAC,UAAAC,QAAAC,KAAAL,SAAAM,IACA,IAAAC,EAAAD,EAAAjC,cAAA,UACAoB,EAAAa,EAAAE,mBAEA,eAAApC,SAAAqC,SAAAC,OACAH,EAAAI,aAAA,iBAAA,GACAlB,EAAAmB,QAAA,GAGAL,EAAAjB,QAAA,KACA,IAAAuB,EAAA,SAAAN,EAAAO,aAAA,mBAAA,EACAP,EAAAI,aAAA,iBAAAE,GACApB,EAAAmB,OAAAC,KASA,MAAAE,QAAA3C,SAAAC,cAAA,SAGA0C,UACAA,QAAAzB,QAAA,IAEA,MAAA0B,EAAAxB,EAAAC,OACA,GAAAuB,EAAAtB,UAAAC,SAAA,cAAA,CACAH,EAAAyB,iBAGA,MAAAC,EAAA9C,SAAA+C,cAAA,UAGA,GAFAD,EAAAE,UAAA,kBAEA,SAAAJ,EAAAK,QAAAC,KAAA,CACA,MAAAC,EAAAnD,SAAA+C,cAAA,OACAI,EAAAC,UAAA,QACAN,EAAApB,YAAAyB,GAEAA,EAAAE,OAAA,KACA,IAAAC,EAAAV,EAAAW,WACAD,EAAAC,WAAAC,aAAAV,EAAAQ,EAAAlB,oBACAQ,EAAAtB,UAAAK,IAAA,WAGA,IAAA8B,EAAAb,EAAAF,aAAA,QACAS,EAAAM,IAAAA,EAEA,IAAAC,EAAAd,EAAAK,QAAAS,IACAA,GACAP,EAAAZ,aAAA,MAAAmB,GAKAC,EAAAf,EAAAR,mBACAwB,EAAAhB,EAAAK,QAAAW,OACA,GAAAD,GAAAC,EAAA,CACA,MAAAC,EAAA7D,SAAA+C,cAAA,cACAY,EAAAG,QAAA,oBACAD,EAAAE,UAAA,MAAAJ,EAAAI,UAAA,OACAjB,EAAApB,YAAAmC,IAEAD,IACAC,EAAAE,UAAAF,EAAAE,UAAA,YAAAH,EAAA,gBAKAI,EAAAhE,SAAA+C,cAAA,UACAiB,EAAAC,YAAA,IACAD,EAAAhB,UAAA,QACAF,EAAApB,YAAAsC,GACAA,EAAA9C,QAAA,KACA4B,EAAAS,WAAAW,YAAApB,GACAF,EAAAtB,UAAAG,OAAA","file":"all.min.js","sourcesContent":["/*jshint esversion: 6 */\n\n\n// Work in progress clickable / dublickable pastilla\nconst wip = document.querySelector('.under');\nif(wip) setRandomPosition(wip);\n\n// set element random position\nfunction setRandomPosition(e){\n  var left = Math.round( Math.random() * (window.innerWidth  - e.getBoundingClientRect().width  ));\n  var tp  = Math.round( Math.random() * (window.innerHeight - e.getBoundingClientRect().height ));\n  e.style.left = left + \"px\";\n  e.style.top = tp + \"px\";\n}\n\n// attach onclick\ndocument.body.onclick = (event) => {\n  if(event.target.classList.contains('under')){\n    var w = event.target.cloneNode(true);\n    w.classList.remove('open');\n    document.body.appendChild(w);\n    setRandomPosition(w);\n    event.target.classList.add('open');\n  }\n};\n\n\n// comments expander\nconst headings = document.querySelectorAll('.expander');\n\nArray.prototype.forEach.call(headings, heading => {\n  let btn = heading.querySelector('button');\n  let target = heading.nextElementSibling;\n\n  if(document.location.hash == '#contribute'){\n    btn.setAttribute('aria-expanded', true);\n    target.hidden = false;\n  }\n\n  btn.onclick = () => {\n    let expanded = btn.getAttribute('aria-expanded') === 'true' || false;\n    btn.setAttribute('aria-expanded', !expanded);\n    target.hidden = expanded;\n  };\n});\n\n\n\n\n// media link in article text\n\nconst article = document.querySelector('#main');\n\n\nif(article){\n  article.onclick = (event) => {\n    console.log(\"ici\");\n    const link = event.target;\n    if(link.classList.contains('media-link') ){\n      event.preventDefault();\n\n      // create figure\n      const figure = document.createElement('figure');\n      figure.className = \"media-container\";\n\n      if(link.dataset.type == \"image\"){\n        const image = document.createElement('img');\n        image.classname = 'media';\n        figure.appendChild(image);\n        // append on load\n        image.onload = () => {\n          var parent = link.parentNode;\n          parent.parentNode.insertBefore(figure, parent.nextElementSibling);\n          link.classList.add('opened');\n        }\n        // load image\n        const src = link.getAttribute('href');\n        image.src = src;\n        // alt\n        var alt = link.dataset.alt;\n        if (alt){\n          image.setAttribute('alt', alt);\n        }\n      }        \n\n      // caption\n      var caption = link.nextElementSibling;\n      var source = link.dataset.source;\n      if (caption || source){\n        const figcaption = document.createElement('figcaption');\n        if(caption.matches('.media-caption')){\n          figcaption.innerHTML = '<p>' + caption.innerHTML + '</p>';\n          figure.appendChild(figcaption);\n        }\n        if(source){\n          figcaption.innerHTML = figcaption.innerHTML + '<a href=\"' + source + '\">source</a>';\n        }\n      }\n      \n      // buttons\n      var close = document.createElement('button');\n      close.textContent = \"×\";\n      close.className= \"close\"\n      figure.appendChild(close);\n      close.onclick = () => {\n        figure.parentNode.removeChild(figure);\n        link.classList.remove('opened');\n      }\n    }\n  };\n}\n\n\n\n\n\n// a little dust under the carpet\n\n// media link in article text\n\n// const article = document.querySelector('#main');\n// var thatlink = null, thatfigure = null, thatdirection = null;\n\n// var lightbox_html = \"<figure class='media-container'></figure>\"\n// if(article){\n//   article.onclick = (event) => {\n//     const link = event.target;\n//     if(link.classList.contains('media-link') ){\n//       event.preventDefault();\n//       if(link.classList.contains('opened')) return false;\n//       // create figure\n//       const figure = document.createElement('figure');\n//       figure.className = \"media-container\";\n\n//       if(link.dataset.type == \"image\"){\n//         const image = document.createElement('img');\n//         image.classname = 'media';\n//         figure.appendChild(image);\n//         image.onload = () => {\n//           article.appendChild(figure);\n//           setRandomPosition(figure);\n//           thatlink = link;\n//           thatfigure = figure;\n//           link.classList.add('opened');\n//           thatdirection = Math.random() > .5 ? 'left' : 'right';\n//           drawConnector();\n//         }\n//         const src = link.getAttribute('href');\n//         image.src = src;\n//       }        \n\n//       // caption\n//       var caption = link.nextElementSibling;\n//       if (caption){\n//         if(caption.matches('.media-caption')){\n//           const figcaption = document.createElement('figcaption');\n//           figcaption.innerHTML = caption.innerHTML;\n//           figure.appendChild(figcaption);\n//         }\n//       }\n\n//       // buttons\n//       var close = document.createElement('button');\n//       close.textContent = \"×\";\n//       figure.appendChild(close);\n//       var expand = document.createElement('button');\n//       expand.textContent = \"⤢\";\n//       figure.appendChild(expand);\n      \n\n//       // drag\n\n//     }\n    \n//     // if(link.closest('figure') !== null){\n//     //   if(link.closest('figure').classList.contains('media-container')){\n\n//     //     const arrowLeft  = document.querySelector(\"#arrowLeft\");\n//     //     const arrowRight = document.querySelector(\"#arrowRight\");\n//     //     arrowLeft.removeAttribute('d');\n//     //     arrowRight.removeAttribute('d');\n//     //     thatlink.classList.remove('opened');\n//     //     thatfigure.parentNode.removeChild(thatfigure);\n//     //     thatlink = null; \n//     //     thatfigure = null; \n//     //     thatdirection = null;\n//     //   }\n//     // }\n//   };\n//   window.onscroll = () => {\n//     drawConnector();\n//   }\n// }\n\n\n\n\n// function drawConnector() {\n//   if(thatlink === null || thatfigure === null || thatdirection === null) {\n//     return false;\n//   }\n  \n\n//   const arrowLeft  = document.querySelector(\"#arrowLeft\");\n//   const arrowRight = document.querySelector(\"#arrowRight\");\n//   var posnALeft = {\n//     x: thatlink.offsetLeft - 8,\n//     y: thatlink.offsetTop - document.documentElement.scrollTop  + thatlink.offsetHeight / 2\n//   };\n//   var posnARight = {\n//     x: thatlink.offsetLeft + thatlink.offsetWidth + 8,\n//     y: thatlink.offsetTop - document.documentElement.scrollTop  + thatlink.offsetHeight / 2    \n//   };\n//   var posnBLeft = {\n//     x: thatfigure.offsetLeft - 8,\n//     y: thatfigure.offsetTop  - document.documentElement.scrollTop  + thatfigure.offsetHeight / 2\n//   };\n//   var posnBRight = {\n//     x: thatfigure.offsetLeft + thatfigure.offsetWidth + 8,\n//     y: thatfigure.offsetTop  - document.documentElement.scrollTop  + thatfigure.offsetHeight / 2\n//   };\n//   var bend = 100 + Math.abs(posnBRight.x - posnARight.x) / 3;\n//   var dStrLeft =\n//       \"M\" +\n//       (posnALeft.x        ) + \",\" + (posnALeft.y) + \" \" +\n//       \"C\" +\n//       (posnALeft.x - bend ) + \",\" + (posnALeft.y) + \" \" +\n//       (posnBLeft.x - bend ) + \",\" + (posnBLeft.y) + \" \" +\n//       (posnBLeft.x        ) + \",\" + (posnBLeft.y);\n//   var dStrRight = \n//       \"M\" +\n//       (posnARight.x       ) + \",\" + (posnARight.y) + \" \" +\n//       \"C\" +\n//       (posnARight.x + bend) + \",\" + (posnARight.y) + \" \" +\n//       (posnBRight.x + bend) + \",\" + (posnBRight.y) + \" \" +\n//       (posnBRight.x       ) + \",\" + (posnBRight.y);\n\n//   if(thatdirection == 'left') {\n//     arrowLeft.setAttribute(\"d\", dStrLeft);\n//   } else {\n//     arrowRight.setAttribute(\"d\", dStrRight);\n//   }\n// };\n\n\n\n// var drg = {\n//   element: null,\n//   active: false,\n//   currentX: null,\n//   currentY: null,\n//   initialX: 0,\n//   initialY: 0,\n//   xOffset: 0,\n//   yOffset: 0,\n//   setTranslate: function(xPos, yPos, el) {\n//     el.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\n//     drawConnector();\n//   },\n//   dragStart: function(e){\n//     if (e.type === \"touchstart\") {\n//       drg.initialX = e.touches[0].clientX - drg.xOffset;\n//       drg.initialY = e.touches[0].clientY - drg.yOffset;\n//     } else {\n//       drg.initialX = e.clientX - drg.xOffset;\n//       drg.initialY = e.clientY - drg.yOffset;\n//     }\n//     if (e.target.matches('.media-container')) {\n//       drg.element = e.target;\n//       drg.active = true;\n//     }\n//   },\n//   dragEnd: function(){    \n//       drg.initialX = drg.currentX;\n//       drg.initialY = drg.currentY;\n//       drg.active = false;    \n//   },\n//   drag: function(e){\n//     if (drg.active) {\n//       e.preventDefault();  \n//       if (e.type === \"touchmove\") {\n//         drg.currentX = e.touches[0].clientX - drg.initialX;\n//         drg.currentY = e.touches[0].clientY - drg.initialY;\n//       } else {\n//         drg.currentX = e.clientX - drg.initialX;\n//         drg.currentY = e.clientY - drg.initialY;\n//       }\n//       drg.xOffset = drg.currentX;\n//       drg.yOffset = drg.currentY;\n//       drg.setTranslate(drg.currentX, drg.currentY, drg.element);\n//     }\n//   }\n// }\n\n\n// article.addEventListener(\"touchstart\", drg.dragStart, false);\n// article.addEventListener(\"touchend\", drg.dragEnd, false);\n// article.addEventListener(\"touchmove\", drg.drag, false);\n// article.addEventListener(\"mousedown\", drg.dragStart, false);\n// article.addEventListener(\"mouseup\", drg.dragEnd, false);\n// article.addEventListener(\"mousemove\", drg.drag, false);\n\n\n"]}